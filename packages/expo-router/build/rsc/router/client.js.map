{"version":3,"file":"client.js","sourceRoot":"","sources":["../../../src/rsc/router/client.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright © 2024 650 Industries.\n * Copyright © 2024 2023 Daishi Kato\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use client';\n\nimport { createElement, useState, Fragment } from 'react';\nimport type { ComponentProps, FunctionComponent, ReactNode } from 'react';\n\nimport { getComponentIds, getInputString } from './common';\nimport type { RouteProps } from './common';\nimport { parseRoute, RouterContext } from './router-context';\nimport { Root, Slot, useRefetch } from '../client';\n\nconst getHref = () =>\n  process.env.EXPO_OS === 'web' ? window.location.href : globalThis.expoVirtualLocation.href;\n\nfunction InnerRouter() {\n  const refetch = useRefetch();\n\n  const [route] = useState(() => parseRoute(new URL(getHref())));\n  const componentIds = getComponentIds(route.path);\n\n  // TODO: strip when \"is exporting\".\n  if (process.env.NODE_ENV === 'development') {\n    const refetchRoute = () => {\n      const loc = parseRoute(new URL(getHref()));\n      const input = getInputString(loc.path);\n      refetch(input, loc.searchParams);\n    };\n    globalThis.__EXPO_RSC_RELOAD_LISTENERS__ ||= [];\n    const index = globalThis.__EXPO_RSC_RELOAD_LISTENERS__.indexOf(\n      globalThis.__EXPO_REFETCH_ROUTE__\n    );\n    if (index !== -1) {\n      globalThis.__EXPO_RSC_RELOAD_LISTENERS__.splice(index, 1, refetchRoute);\n    } else {\n      globalThis.__EXPO_RSC_RELOAD_LISTENERS__.unshift(refetchRoute);\n    }\n    globalThis.__EXPO_REFETCH_ROUTE__ = refetchRoute;\n  }\n\n  const children = componentIds.reduceRight(\n    (acc: ReactNode, id) => createElement(Slot, { id, fallback: acc }, acc),\n    null\n  );\n\n  return createElement(RouterContext.Provider, { value: { route } }, children);\n}\n\nexport function Router() {\n  const route = parseRoute(new URL(getHref()));\n  const initialInput = getInputString(route.path);\n  const initialSearchParamsString = route.searchParams.toString();\n  const unstable_onFetchData = (data: unknown) => {};\n  return createElement(\n    Root as FunctionComponent<Omit<ComponentProps<typeof Root>, 'children'>>,\n    { initialInput, initialSearchParamsString, unstable_onFetchData },\n    createElement(InnerRouter)\n  );\n}\n\nconst notAvailableInServer = (name: string) => () => {\n  throw new Error(`${name} is not in the server`);\n};\n\n/**\n * ServerRouter for SSR\n * This is not a public API.\n */\nexport function ServerRouter({ children, route }: { children: ReactNode; route: RouteProps }) {\n  return createElement(\n    Fragment,\n    null,\n    createElement(\n      RouterContext.Provider,\n      {\n        value: {\n          route,\n          changeRoute: notAvailableInServer('changeRoute'),\n          prefetchRoute: notAvailableInServer('prefetchRoute'),\n        },\n      },\n      children\n    )\n  );\n}\n"]}