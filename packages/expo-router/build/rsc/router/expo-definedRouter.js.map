{"version":3,"file":"expo-definedRouter.js","sourceRoot":"","sources":["../../../src/rsc/router/expo-definedRouter.ts"],"names":[],"mappings":";;AAAA,sBAAoB;AACpB,2CAAuC;AAEvC,iDAA6C;AAE7C,SAAS,QAAQ,CAAC,MAAmD,EAAE,KAAK,GAAG,OAAO;IACpF,OAAO,IAAA,0BAAW,EAChB,KAAK,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,qBAAqB,EAAE,EAAE,EAAE,oBAAoB,EAAE,EAAE,EAAE;QACtF,IAAI,KAAe,CAAC;QACpB,IAAI,oBAAoB,EAAE;YACxB,qCAAqC;YACrC,KAAK,GAAI,oBAAoB,CAAC,CAAC,CAAE,CAAC,UAAkB,CAAC,IAAI,CAAC;SAC3D;aAAM;YACL,KAAK,GAAG,UAAG,CAAC,IAAI,EAAE,CAAC;YAEnB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;SACJ;QACD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAEtC,6EAA6E;YAC7E,MAAM,MAAM,GAAG,WAAW,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACjE,MAAM,SAAS,GAAG,IAAI;iBACnB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;iBACpB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;iBACrB,KAAK,CAAC,GAAG,CAAC;iBACV,MAAM,CAAC,OAAO,CAAC,CAAC;YACnB,MAAM,IAAI,GACR,GAAG;gBACH,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;oBAC/C,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxB,CAAC,CAAC,SAAS,CACZ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACd,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,qCAAqC;YACzE,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;gBAClC,YAAY,CAAC;oBACX,IAAI;oBACJ,8DAA8D;oBAC9D,SAAS,EAAE,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;oBAC/C,MAAM,EAAE,QAAQ;oBAChB,GAAG,MAAM;iBACV,CAAC,CAAC;aACJ;iBAAM;gBACL,UAAU,CAAC;oBACT,IAAI;oBACJ,8DAA8D;oBAC9D,SAAS,EAAE,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;oBAC/C,MAAM,EAAE,SAAS;oBACjB,GAAG,MAAM;iBACV,CAAC,CAAC;aACJ;SACF;IACH,CAAC,CACF,CAAC;AACJ,CAAC;AAED,kBAAe,QAAQ,CAAC,MAAM,CAAC,CAAC;AAEhC,SAAS,MAAM,CAAC,GAAW,EAAE,IAAY;IACvC,OAAO,IAAA,UAAG,EAAC,IAAI,CAAC,CAAC;AACnB,CAAC","sourcesContent":["import '../runtime';\nimport { ctx } from 'expo-router/_ctx';\n\nimport { createPages } from './create-pages';\n\nfunction fsRouter(loader: (dir: string, file: string) => Promise<any>, pages = 'pages') {\n  return createPages(\n    async ({ createPage, createLayout, unstable_setBuildData }, { unstable_buildConfig }) => {\n      let files: string[];\n      if (unstable_buildConfig) {\n        // TODO FIXME this is toooooooo naive\n        files = (unstable_buildConfig[0]!.customData as any).data;\n      } else {\n        files = ctx.keys();\n\n        files = files.flatMap((file) => {\n          return [file];\n        });\n      }\n      for (const file of files) {\n        const mod = await loader(pages, file);\n\n        // NOTE(EvanBacon): Support `getConfig` in routes with top-level \"use client\"\n        const config = 'getConfig' in mod ? await mod.getConfig?.() : {};\n        const pathItems = file\n          .replace(/^\\.\\//, '')\n          .replace(/\\.\\w+$/, '')\n          .split('/')\n          .filter(Boolean);\n        const path =\n          '/' +\n          (['_layout', 'index'].includes(pathItems.at(-1)!)\n            ? pathItems.slice(0, -1)\n            : pathItems\n          ).join('/');\n        unstable_setBuildData(path, files); // FIXME toooooo naive, not efficient\n        if (pathItems.at(-1) === '_layout') {\n          createLayout({\n            path,\n            // NOTE(EvanBacon): Support routes with top-level \"use client\"\n            component: 'default' in mod ? mod.default : mod,\n            render: 'static',\n            ...config,\n          });\n        } else {\n          createPage({\n            path,\n            // NOTE(EvanBacon): Support routes with top-level \"use client\"\n            component: 'default' in mod ? mod.default : mod,\n            render: 'dynamic',\n            ...config,\n          });\n        }\n      }\n    }\n  );\n}\n\nexport default fsRouter(loader);\n\nfunction loader(dir: string, file: string) {\n  return ctx(file);\n}\n"]}